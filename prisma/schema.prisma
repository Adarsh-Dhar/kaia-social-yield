generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  lineUserId    String        @unique
  walletAddress String        @unique
  displayName   String?
  pictureUrl    String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  activeBoosts  ActiveBoost[]
  referralUsed  Referral?     @relation("Referee")
  referralsMade Referral[]    @relation("Referrer")
  userMissions  UserMission[]
}

model Advertiser {
  id            String     @id @default(cuid())
  companyName   String
  contactEmail  String     @unique
  walletAddress String     @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  passwordHash  String
  campaigns     Campaign[]
}

model Campaign {
  id                 String        @id @default(cuid())
  name               String
  description        String
  status             String
  budget             Float
  remainingBudget    Float
  startDate          DateTime
  endDate            DateTime
  createdAt          DateTime      @default(now())
  advertiserId       String
  missionId          String        @unique
  updatedAt          DateTime      @default(now()) @updatedAt
  contractCampaignId String?
  activeBoosts       ActiveBoost[]
  advertiser         Advertiser    @relation(fields: [advertiserId], references: [id])
  mission            Mission       @relation(fields: [missionId], references: [id])

  @@index([advertiserId])
}

model Mission {
  id                String        @id @default(cuid())
  title             String
  description       String
  type              String
  boostMultiplier   Float
  boostDuration     Int
  isRepeatable      Boolean       @default(false)
  verificationUrl   String?
  targetCompletions Int           @default(0)
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now()) @updatedAt
  campaign          Campaign?
  userMissions      UserMission[]
}

model UserMission {
  id          String    @id @default(cuid())
  userId      String
  missionId   String
  status      String
  completedAt DateTime?
  mission     Mission   @relation(fields: [missionId], references: [id])
  user        User      @relation(fields: [userId], references: [id])

  @@unique([userId, missionId])
  @@index([userId])
  @@index([missionId])
}

model Referral {
  id         String   @id @default(cuid())
  referrerId String
  refereeId  String   @unique
  status     String
  createdAt  DateTime @default(now())
  referee    User     @relation("Referee", fields: [refereeId], references: [id])
  referrer   User     @relation("Referrer", fields: [referrerId], references: [id])

  @@index([referrerId])
}

model ActiveBoost {
  id              String    @id @default(cuid())
  userId          String
  boostMultiplier Float
  expiresAt       DateTime
  campaignId      String?
  campaign        Campaign? @relation(fields: [campaignId], references: [id])
  user            User      @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([campaignId])
}
